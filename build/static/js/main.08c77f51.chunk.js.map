{"version":3,"sources":["components/AddAppointments.js","components/ListAppointments.js","components/SearchAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","state","petName","ownerName","aptDate","aptTime","aptNotes","handleChange","bind","handleAdd","e","preventDefault","tempApt","this","props","addAppointment","setState","toggleForm","target","value","name","className","formDisplay","onClick","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","OwnerName","rows","cols","Component","ListAppointments","Fragment","appointments","map","item","key","aptId","deleteAppointment","contentEditable","suppressContentEditableWarning","onBlur","updateInfo","innerText","date","parse","format","SearchAppointments","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDir","href","role","App","myAppointments","queryText","lastIndex","query","order","dir","tempApts","findIndex","apt","unshift","without","fetch","then","response","json","result","apts","filteredApts","sort","a","b","toLowerCase","filter","eachItem","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.08c77f51.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { FaPlus } from 'react-icons/fa';\n\nclass AddAppointments extends Component {\n\n    constructor() {\n        super();\n        this.state= {\n            petName: '',\n            ownerName: '',\n            aptDate: '',\n            aptTime: '',\n            aptNotes: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n    }\n\n    handleAdd(e) {\n        e.preventDefault();\n        let tempApt = {\n            petName: this.state.petName,\n            ownerName: this.state.ownerName,\n            aptDate: this.state.aptDate + ' ' +this.state.aptTime,\n            aptNotes: this.state.aptNotes\n        };\n\n        this.props.addAppointment(tempApt);\n\n        this.setState({\n            petName: '',\n            ownerName: '',\n            aptDate: '',\n            aptTime: '',\n            aptNotes: ''\n        });\n        this.props.toggleForm();\n    }\n\n    handleChange(e) {\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    render() {\n        return (\n            <div className={\n                'card textcenter mt-3 ' +\n                (this.props.formDisplay ? '': 'add-appointment')\n            }>\n            <div className=\"apt-addheading card-header bg-primary text-white\"\n                onClick={this.props.toggleForm}>\n              <FaPlus /> Add Appointment\n            </div>\n  \n            <div className=\"card-body\">\n              <form id=\"aptForm\" noValidate\n                  onSubmit={this.handleAdd}>\n                <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"petName\"\n                    readOnly\n                  >\n                    Pet Name\n                  </label>\n                  <div className=\"col-md-10\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"petName\"\n                      placeholder=\"Pet's Name\"\n                      value={this.state.petName}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"ownerName\"\n                  >\n                    Pet Owner\n                  </label>\n                  <div className=\"col-md-10\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"ownerName\"\n                      placeholder=\"Owner's Name\"\n                      value={this.state.OwnerName}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"form-group form-row\">\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"aptDate\"\n                  >\n                    Date\n                  </label>\n                  <div className=\"col-md-4\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control\"\n                      name=\"aptDate\"\n                      id=\"aptDate\"\n                      value={this.state.aptDate}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  <label\n                    className=\"col-md-2 col-form-label text-md-right\"\n                    htmlFor=\"aptTime\"\n                  >\n                    Time\n                  </label>\n                  <div className=\"col-md-4\">\n                    <input\n                      type=\"time\"\n                      className=\"form-control\"\n                      name=\"aptTime\"\n                      id=\"aptTime\"\n                      value={this.state.aptTime}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"form-group form-row\">\n                  <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\n                    Apt. Notes\n                  </label>\n                  <div className=\"col-md-10\">\n                    <textarea\n                      className=\"form-control\"\n                      rows=\"4\"\n                      cols=\"50\"\n                      name=\"aptNotes\"\n                      id=\"aptNotes\"\n                      placeholder=\"Appointment Notes\"\n                      value={this.state.aptNotes}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n  \n                <div className=\"form-group form-row mb-0\">\n                  <div className=\"offset-md-2 col-md-10\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary d-block ml-auto\"\n                    >\n                      Add Appointment\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default AddAppointments;","import React, {Component} from 'react';\nimport { FaTimes } from 'react-icons/fa';\nimport Moment from 'react-moment';\n\nclass ListAppointments extends Component {\n    render() {\n        return ( \n            <React.Fragment>\n                <div className=\"appointment-list item-list mb-3\">\n                    <div className=\"apt-addheading card-header bg-primary text-white\">\n                        List Appointment\n                    </div>\n\n                    {this.props.appointments.map( item => (\n                        <div className=\"pet-item col media py-3\" key={item.aptId}>\n                        <div className=\"mr-3\">\n                            <button className=\"pet-delete btn btn-sm btn-danger\"\n                            onClick={()=> this.props.deleteAppointment(item)}>\n                                <FaTimes />\n                            </button>\n                        </div>\n            \n                        <div className=\"pet-info media-body\">\n                            <div className=\"pet-head d-flex\">\n                                <span className=\"pet-name\"\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onBlur={\n                                        e => this.props.updateInfo('petName', e.target.innerText, item.aptId)\n                                    }\n                                >{item.petName}</span>\n                                <span className=\"apt-date ml-auto\">\n                                    <Moment\n                                        date={item.aptDate}\n                                        parse=\"YYYY-MM-dd hh:mm\"\n                                        format=\"MMM-D h:mma\"\n                                    />\n                                </span>\n                            </div>\n            \n                            <div className=\"owner-name\">\n                                <span className=\"label-item\">Owner : </span>\n                                <span\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onBlur={\n                                        e => this.props.updateInfo('ownerName', e.target.innerText, item.aptId)\n                                    }\n                                >{item.ownerName}</span>\n                            </div>\n                            <div className=\"apt-notes\">\n                                <span className=\"label-item\">Notes : </span>\n                                <span\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onBlur={\n                                        e => this.props.updateInfo('aptNotes', e.target.innerText, item.aptId)\n                                    }\n                                >{item.aptNotes}</span>\n                            </div>\n                        </div>\n                    </div>\n                    ))}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ListAppointments;","import React, {Component} from 'react';\n\nclass SearchAppointments extends Component {\n    render() {\n        return (\n            <div className=\"search-appointments row justify-content-center my-4\">\n            <div className=\"col-md-6\">\n              <div className=\"input-group\">\n                <input\n                  id=\"SearchApts\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  aria-label=\"Search Appointments\"\n                  onChange={e=> this.props.searchApts(e.target.value)}\n                />\n                <div className=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary dropdown-toggle\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    Sort by: <span className=\"caret\" />\n                  </button>\n    \n                  <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\n                    <button className={\n                        'sort-by dropdown-item ' +\n                        (this.props.orderBy === 'petName' ? 'active': '')\n                    }\n                    onClick={ e => this.props.changeOrder('petName', this.props.orderDir)}\n                    href=\"#\">\n                      Pet Name\n                    </button>\n                    <button className={\n                        'sort-by dropdown-item ' +\n                        (this.props.orderBy === 'aptDate' ? 'active': '')\n                    } \n                    onClick={ e => this.props.changeOrder('aptDate', this.props.orderDir)}\n                    href=\"#\">\n                      Date\n                    </button>\n                    <button className={\n                        'sort-by dropdown-item ' +\n                        (this.props.orderBy === 'ownerName' ? 'active': '')\n                    }\n                    onClick={ e => this.props.changeOrder('ownerName', this.props.orderDir)}\n                    href=\"#\">\n                      Owner\n                    </button>\n                    <div role=\"separator\" className=\"dropdown-divider\" />\n                    <button className={\n                        'sort-by dropdown-item ' +\n                        (this.props.orderDir === 'asc' ? 'active': '')\n                    }\n                    onClick={ e => this.props.changeOrder(this.props.orderBy, 'asc')}\n                    href=\"#\">\n                      Asc\n                    </button>\n                    <button className={\n                        'sort-by dropdown-item ' +\n                        (this.props.orderDir === 'petName' ? 'active': '')\n                    }\n                    onClick={ e => this.props.changeOrder(this.props.orderBy, 'desc')}\n                    href=\"#\">\n                      Desc\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default SearchAppointments;","import React, {Component} from 'react';\nimport '../css/App.css';\n\nimport AddAppointments from './AddAppointments';\nimport ListAppointments from './ListAppointments';\nimport SearchAppointments from './SearchAppointments';\n\nimport {findIndex, without} from 'lodash';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      myAppointments: [],\n      formDisplay: false,\n      orderBy: 'petName',\n      orderDir: 'asc',\n      queryText: '',\n      lastIndex: 0\n    };\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.changeOrder = this.changeOrder.bind(this);\n    this.searchApts = this.searchApts.bind(this);\n    this.updateInfo = this.updateInfo.bind(this);\n\n  }\n\n  toggleForm() {\n    this.setState({\n      formDisplay: !this.state.formDisplay\n    });\n  }\n\n  searchApts(query) {\n    this.setState({queryText: query});\n  }\n\n  changeOrder(order, dir) {\n    this.setState({\n      orderBy: order,\n      orderDir: dir\n    });\n  }\n\n  updateInfo(name, value, id) {\n    let tempApts = this.state.myAppointments;\n    let aptIndex =  findIndex(this.state.myAppointments, {\n      aptId: id\n    });\n    tempApts[aptIndex][name] = value;\n    this.setState({\n      myAppointments: tempApts\n    });\n  }\n\n  addAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    apt.aptId = this.state.lastIndex;\n    tempApts.unshift(apt);\n    this.setState({\n      myAppointments: tempApts,\n      lastIndex: this.state.lastIndex + 1\n    })\n  }\n\n  deleteAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    tempApts = without(tempApts, apt);\n\n    this.setState({\n      myAppointments: tempApts\n    })\n  }\n\n  componentDidMount() {\n    fetch('./data.json')\n    .then(response => response.json())\n    .then(result => {\n      const apts = result.map(item => {\n        item.aptId = this.state.lastIndex;\n        this.setState({ lastIndex: this.state.lastIndex + 1});\n        return item;\n      })\n      this.setState({\n        myAppointments: apts\n      });\n    });\n  }\n\n  render() {\n\n    let order;\n    let filteredApts = this.state.myAppointments;\n    if(this.state.orderDir === 'asc') {\n      order = 1;\n    } else {\n      order = -1;\n    }\n\n    filteredApts = filteredApts.sort((a,b) => {\n      if (a[this.state.orderBy].toLowerCase() <\n          b[this.state.orderBy].toLowerCase()\n      ) {\n        return -1 * order;\n      } else {\n        return 1 * order;\n      }\n    }).filter(eachItem => {\n      return(\n        eachItem['petName']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) ||\n        eachItem['ownerName']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) ||\n        eachItem['aptNotes']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase())\n      );\n    });\n\n    return (\n      <main className=\"page bg-white\" id=\"petratings\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12 bg-white\">\n            <div className=\"container\">\n              <AddAppointments\n                formDisplay={this.state.formDisplay}\n                toggleForm={this.toggleForm}\n                addAppointment = {this.addAppointment}\n              />\n              <SearchAppointments \n                orderBy={this.state.orderBy}\n                orderDir={this.state.orderDir}\n                changeOrder={this.changeOrder}\n                searchApts={this.searchApts}\n              />\n              <ListAppointments appointments={filteredApts}\n                deleteAppointment={this.deleteAppointment}\n                updateInfo={this.updateInfo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery.js'\nimport 'popper.js/dist/umd/popper.js'\nimport 'bootstrap/dist/js/bootstrap.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}